{
  "graphName": "supergraph-demo-fed2",
  "federationVersion": 1,
  "operations": {},
  "queryPlans": {
    "test": "Syntax Error: Expected Name, found \"}\"."
  },
  "schemas": {
    "products": {
      "shouldMock": true,
      "sdl": "type Query {\n  allProducts: [ProductItf]\n  product(id: ID!): ProductItf\n}\n\ntype Product implements ProductItf @key(fields: \"id\"){\n  id: ID!\n  sku: String\n  package: String\n  variation: ProductVariation\n  dimensions: ProductDimension\n  createdBy: User\n}\n\ntype User @key(fields: \"email\") {\n  email: ID!\n  totalProductsCreated: Int\n}\n\ntype ProductVariation {\n  id: ID!\n}\n\ntype ProductDimension {\n  size: String\n  weight: Float\n}\n\nenum ShippingClass {\n  STANDARD\n  EXPRESS\n}\n\ninterface ProductItf {\n  id: ID!\n  sku: String\n  package: String\n  variation: ProductVariation\n  dimensions: ProductDimension\n  createdBy: User\n  \n}\n",
      "autoUpdateSchemaFromUrl": false
    },
    "inventory": {
      "shouldMock": true,
      "sdl": "type Product implements ProductItf @key(fields: \"id\") {\n  id: ID!\n  dimensions: ProductDimension @external\n  delivery(zip: String): DeliveryEstimates\n    @requires(fields: \"dimensions { size weight }\")\n}\n\ntype ProductDimension {\n  size: String\n  weight: Float\n}\n\ntype DeliveryEstimates {\n  estimatedDelivery: String\n  fastestDelivery: String \n}\n\nenum ShippingClass {\n  STANDARD\n  EXPRESS\n  OVERNIGHT \n}\n\ninterface ProductItf {\n  id: ID!\n  dimensions: ProductDimension\n  delivery(zip: String): DeliveryEstimates\n}\n",
      "autoUpdateSchemaFromUrl": false
    },
    "users": {
      "shouldMock": true,
      "sdl": "type User @key(fields:\"email\") {\n    email:ID!\n    name: String\n    totalProductsCreated: Int\n}",
      "autoUpdateSchemaFromUrl": false
    }
  },
  "supergraphSdl": "schema\n  @core(feature: \"https://specs.apollo.dev/core/v0.2\")\n  @core(feature: \"https://specs.apollo.dev/join/v0.2\", for: EXECUTION)\n{\n  query: Query\n}\n\ndirective @core(feature: String!, as: String, for: core__Purpose) repeatable on SCHEMA\n\ndirective @join__field(graph: join__Graph!, requires: join__FieldSet, provides: join__FieldSet, type: String, external: Boolean) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION\n\ndirective @join__graph(name: String!, url: String!) on ENUM_VALUE\n\ndirective @join__implements(graph: join__Graph!, interface: String!) repeatable on OBJECT | INTERFACE\n\ndirective @join__type(graph: join__Graph!, key: join__FieldSet, extension: Boolean! = false) repeatable on OBJECT | INTERFACE | UNION | ENUM | INPUT_OBJECT | SCALAR\n\nenum core__Purpose {\n  \"\"\"\n  `SECURITY` features provide metadata necessary to securely resolve fields.\n  \"\"\"\n  SECURITY\n\n  \"\"\"\n  `EXECUTION` features provide metadata necessary for operation execution.\n  \"\"\"\n  EXECUTION\n}\n\ntype DeliveryEstimates\n  @join__type(graph: INVENTORY)\n{\n  estimatedDelivery: String\n  fastestDelivery: String\n}\n\nscalar join__FieldSet\n\nenum join__Graph {\n  INVENTORY @join__graph(name: \"inventory\", url: \"http://localhost\")\n  PRODUCTS @join__graph(name: \"products\", url: \"http://localhost\")\n  USERS @join__graph(name: \"users\", url: \"http://localhost\")\n}\n\ntype Product implements ProductItf\n  @join__implements(graph: INVENTORY, interface: \"ProductItf\")\n  @join__implements(graph: PRODUCTS, interface: \"ProductItf\")\n  @join__type(graph: INVENTORY, key: \"id\")\n  @join__type(graph: PRODUCTS, key: \"id\")\n{\n  id: ID!\n  dimensions: ProductDimension @join__field(graph: PRODUCTS)\n  delivery(zip: String): DeliveryEstimates @join__field(graph: INVENTORY, requires: \"dimensions { size weight }\")\n  sku: String @join__field(graph: PRODUCTS)\n  package: String @join__field(graph: PRODUCTS)\n  variation: ProductVariation @join__field(graph: PRODUCTS)\n  createdBy: User @join__field(graph: PRODUCTS)\n}\n\ntype ProductDimension\n  @join__type(graph: INVENTORY)\n  @join__type(graph: PRODUCTS)\n{\n  size: String\n  weight: Float\n}\n\ninterface ProductItf\n  @join__type(graph: INVENTORY)\n  @join__type(graph: PRODUCTS)\n{\n  id: ID!\n  dimensions: ProductDimension\n  delivery(zip: String): DeliveryEstimates @join__field(graph: INVENTORY)\n  sku: String @join__field(graph: PRODUCTS)\n  package: String @join__field(graph: PRODUCTS)\n  variation: ProductVariation @join__field(graph: PRODUCTS)\n  createdBy: User @join__field(graph: PRODUCTS)\n}\n\ntype ProductVariation\n  @join__type(graph: PRODUCTS)\n{\n  id: ID!\n}\n\ntype Query\n  @join__type(graph: INVENTORY)\n  @join__type(graph: PRODUCTS)\n  @join__type(graph: USERS)\n{\n  allProducts: [ProductItf] @join__field(graph: PRODUCTS)\n  product(id: ID!): ProductItf @join__field(graph: PRODUCTS)\n}\n\nenum ShippingClass\n  @join__type(graph: INVENTORY)\n  @join__type(graph: PRODUCTS)\n{\n  STANDARD\n  EXPRESS\n  OVERNIGHT\n}\n\ntype User\n  @join__type(graph: PRODUCTS, key: \"email\")\n  @join__type(graph: USERS, key: \"email\")\n{\n  email: ID!\n  totalProductsCreated: Int\n  name: String @join__field(graph: USERS)\n}",
  "ignoreHints": {}
}
